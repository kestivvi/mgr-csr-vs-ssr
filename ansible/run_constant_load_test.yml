---
- name: Run k6 Constant Load Test Synchronously
  hosts: role_load_generators
  gather_facts: false
  vars:
    # These values can be overridden from the ansible-playbook command if needed
    k6_rps: 100
    k6_duration: "5m"
    prometheus_url: "http://{{ hostvars[groups['role_monitoring_server'][0]]['private_ip'] }}:9090"

  tasks:
    - name: Define server-specific variables
      ansible.builtin.set_fact:
        # Create the uppercase version of the scenario type for use in templates
        scenario_type_upper: "{{ scenario_type | upper }}"
        # Dynamically construct the target URL using the private IP of the corresponding app server
        target_url: "http://{{ hostvars[groups['app_server_' + scenario_type][0]]['private_ip'] }}"

    - name: Display Target URL for verification
      ansible.builtin.debug:
        msg: "Host {{ inventory_hostname }} (type: {{ scenario_type_upper }}) will target {{ target_url }}"

    - name: Clean up any previous k6 archive artifacts
      ansible.builtin.file:
        path: /home/ec2-user/k6_archive.tar
        state: absent
      become: true

    - name: Copy k6 test archive to remote host
      ansible.builtin.copy:
        src: "{{ project_root }}/k6/build/k6_archive.tar"
        dest: /home/ec2-user/k6_archive.tar
        mode: "0644"
        force: true

    - name: Ensure k6 Docker image is present
      community.docker.docker_image:
        name: "grafana/k6:1.1.0"
        source: pull

    - name: Run k6 constant load test using docker_container module
      community.docker.docker_container:
        name: "k6_constant_load_{{ scenario_type }}"
        image: "grafana/k6:1.1.0"
        state: started
        auto_remove: true
        network_mode: host
        interactive: true
        volumes:
          - /home/ec2-user/k6_archive.tar:/k6_archive.tar:ro
        env:
          K6_SCENARIO: "constant_test"
          SERVER_TYPE: "{{ scenario_type_upper }}"
          TARGET_URL: "{{ target_url }}"
          K6_RPS: "{{ k6_rps }}"
          K6_DURATION: "{{ k6_duration }}"
          K6_PROMETHEUS_RW_SERVER_URL: "{{ prometheus_url }}/api/v1/write"
          K6_PROMETHEUS_RW_TREND_AS_NATIVE_HISTOGRAM: "true"
          K6_LOG_OUTPUT: "none"
        command:
          - "run"
          - "--out"
          - "experimental-prometheus-rw"
          - "--tag"
          - "server={{ scenario_type_upper }}"
          - "/k6_archive.tar"
      register: k6_result
